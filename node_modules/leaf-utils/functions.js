const { MessageActionRow, MessageButton } = require('discord.js');

const converter = ['ᴀ', 'ʙ', 'ᴄ', 'ᴅ', 'ᴇ', 'ꜰ', 'ɢ', 'ʜ', 'ɪ', 'ᴊ',
  'ᴋ', 'ʟ', 'ᴍ', 'ɴ', 'ᴏ', 'ᴘ', 'ǫ', 'ʀ', 'ꜱ', 'ᴛ', 'ᴜ', 'ᴠ', 'ᴡ', 'x', 'ʏ', 'ᴢ'];
const letters = 'abcdefghijklmnopqrstuvwxyz'.split('');

module.exports = {
  i(length) {
    var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    var result = '';
    for (var i = 0; i < length; i++) {
      result += randomChars.charAt(Math.floor(Math.random() * randomChars.length))
    }
    return result;
  },

reverseText(content) {
    return content.split('').reverse().join('');
  },

shuffle(array) {
        for (var i = array.length - 1; i > 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            var temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
        return array;
    },

    disableButtons(components) {
        for (let x = 0; x < components.length; x++) {
			for (let y = 0; y < components[x].components.length; y++) {
			  components[x].components[y].disabled = true;
			}
		}

        return components;
    },

    randomRange(min, max) {
		return Math.floor(Math.random() * (max - min + 1)) + min;
	},

    move(pos, dir) {
        switch (dir) {
            case 'up':
                return { x: pos.x, y: pos.y - 1 }
            case 'down':
                return { x: pos.x, y: pos.y + 1 }
            case 'left':
                return { x: pos.x - 1, y: pos.y }
            case 'right':
                return { x: pos.x + 1, y: pos.y }
        }
    },

    isInsideBlock(pos, width, height) {
        return pos.x >= 0 && pos.y >= 0 && pos.x < width && pos.y < height;
    },

    posEqual(pos1, pos2) {
        return pos1.x === pos2.x && pos1.y === pos2.y;
    },
    
    oppDirection (dir) {
        switch (dir) {
            case 'up':
                return 'down'
            case 'down':
                return 'up'
            case 'left':
                return 'right'
            case 'right':
                return 'left'
        }
    },

  smallCaps(text) {
    const content = text.toLowerCase().split('').map(letter => {
      if (/[a-z]/g.test(letter)) {
        var index = letters.indexOf(letter)
        return converter[index];
      } else {
        return letter
      }
    }).join('');
    return content;
  },

  getRandomString: function(length) {
		const randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
		let result = '';
		for (let i = 0; i < length; i++) {
			result += randomChars.charAt(
				Math.floor(Math.random() * randomChars.length),
			);
		}
		return result;
	},

  convertTime: function(time) {
		const absoluteSeconds = Math.floor((time / 1000) % 60);
		const absoluteMinutes = Math.floor((time / (1000 * 60)) % 60);
		const absoluteHours = Math.floor((time / (1000 * 60 * 60)) % 24);
		const absoluteDays = Math.floor(time / (1000 * 60 * 60 * 24));
		const d = absoluteDays
			? absoluteDays === 1
				? '1 day'
				: `${absoluteDays} days`
			: null;
		const h = absoluteHours
			? absoluteHours === 1
				? '1 hour'
				: `${absoluteHours} hours`
			: null;
		const m = absoluteMinutes
			? absoluteMinutes === 1
				? '1 minute'
				: `${absoluteMinutes} minutes`
			: null;
		const s = absoluteSeconds
			? absoluteSeconds === 1
				? '1 second'
				: `${absoluteSeconds} seconds`
			: null;
		const absoluteTime = [];
		if (d) absoluteTime.push(d);
		if (h) absoluteTime.push(h);
		if (m) absoluteTime.push(m);
		if (s) absoluteTime.push(s);
		return absoluteTime.join(', ');
	},

  shuffleArray: function(array) {
		for (let i = array.length - 1; i > 0; i--) {
			const j = Math.floor(Math.random() * (i + 1));
			const temp = array[i];
			array[i] = array[j];
			array[j] = temp;
		}
		return array;
	},

  randomHexColor: function() {
		return (
			'#' +
			('000000' + Math.floor(Math.random() * 16777215).toString(16)).slice(-6)
		);
	},

  addRow: function(btns) {
		const row = new MessageActionRow();
		for (const btn of btns) {
			row.addComponents(btn);
		}
		return row;
	},

  createButton: function(label, disabled, getRandomString) {
    let style = 'SECONDARY';
    if (label === 'AC' || label === 'DC' || label === '⌫') {
      style = 'DANGER';
    } else if (label === '=') {
      style = 'SUCCESS';
    } else if (
      label === '(' ||
      label === ')' ||
      label === '^' ||
      label === '%' ||
      label === '÷' ||
      label === 'x' ||
      label === '-' ||
      label === '+' ||
      label === '.'
    ) {
      style = 'PRIMARY';
    }
    if (disabled) {
      const btn = new MessageButton()
        .setLabel(label)
        .setStyle(style)
        .setDisabled();
      if (label === '\u200b') {
        btn.setCustomId(getRandomString(10));
      } else {
        btn.setCustomId('cal' + label);
      }
      return btn;
    } else {
      const btn = new MessageButton().setLabel(label).setStyle(style);
      if (label === '\u200b') {
        btn.setDisabled();
        btn.setCustomId(getRandomString(10));
      } else {
        btn.setCustomId('cal' + label);
      }
      return btn;
    }
  }
}