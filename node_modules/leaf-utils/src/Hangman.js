const { MessageEmbed } = require('discord.js');
const possible_themes = ['misc', 'sport', 'coding', 'nature', 'popular game', 'phone brand', 'color', 'camping', 'music instrument']

const misc_theme = [
  "medicine",
  "situation",
  "hall",
  "desk",
  "hotel",
  "president",
  "thought",
  "method",
  "village",
  "user",
  "blood",
  "math",
  "highway",
  "agency",
  "intention",
  "marriage",
  "poet",
  "student",
  "pollution",
  "office",
  "insurance",
  "person",
  "health",
  "session",
  "warning",
  "attitude",
  "analysis",
  "trainer",
  "paper",
  "attention",
  "currency",
  "chocolate",
  "depth",
  "dealer",
  "dinner",
  "night",
  "drawer",
  "tennis",
  "singer",
  "virus",
  "college",
  "oven",
  "uncle",
  "arrival",
  "recording",
  "sector",
  "flight",
  "emotion",
  "meaning",
  "moment",
  "elevator",
  "lab",
  "teaching",
  "ad",
  "sister",
  "artisan",
  "memory",
  "studio",
  "goal",
  "currency",
  "employer",
  "camera",
  "marketing",
  "quantity",
  "clothes",
  "tale",
  "leader",
  "solution",
  "cousin",
  "republic",
  "signature",
  "idea",
  "moment",
  "basket",
  "homework",
  "hospital",
  "direction",
  "potato",
  "death",
  "scene",
  "committee",
  "version",
  "childhood",
  "manager",
  "menu",
  "mud",
  "people",
  "love",
  "king",
  "drawing",
  "housing",
  "hearing",
  "insect",
  "lake",
  "gate",
  "category",
  "theory",
  "movie",
  "inflation",
  "media",
  "arrival",
  "week",
  "outcome",
  "health",
  "recipe",
  "payment",
  "oven",
  "inspector",
  "intention",
  "song",
  "apartment",
  "dirt",
  "food",
  "medicine",
  "growth",
  "funeral",
  "concept",
  "throat",
  "reality",
  "mud",
  "awareness",
  "sister",
  "context",
  "cancer",
  "actor",
  "bread",
  "basis",
  "reading",
  "college",
  "climate",
  "theory",
  "industry",
  "idea",
  "volume",
  "region",
  "hearing",
  "security",
  "clothes",
  "director",
  "data",
  "opinion",
  "confusion",
  "camera",
  "sympathy",
  "signature",
  "complaint",
  "message",
  "wealth",
  "drawing",
  "secretary",
  "wing",
  "uppity",
  "shallow",
  "wrist",
  "body",
  "develop",
  "ground",
  "snails",
  "squealing",
  "drug",
  "army",
  "sad",
  "cherries",
  "rabbit",
  "rock",
  "helpless",
  "flowers",
  "cows",
  "ready",
  "zany",
  "yellow",
  "save",
  "listen",
  "accidental",
  "tacky",
  "horrible",
  "flagrant",
  "nervous",
  "flock",
  "bear",
  "cure",
  "bag",
  "mom",
  "cup",
  "wed",
  "letter",
  "eggs",
  "illumine",
  "sheet",
  "dusty",
  "frogs",
  "aboard",
  "bed",
  "reply",
  "receipt",
  "grandiose",
  "shrill",
  "new",
  "dump",
  "painstaking",
  "journey",
  "month",
  "passenger",
  "scam",
  "tree",
  "determine",
  "town",
  "hinder",
  "book",
  "mammoth",
  "shun",
  "resemble",
  "face",
  "toys",
  "card",
  "act",
  "zonked",
  "ill",
  "foretell",
  "tame",
  "encouraging",
  "action",
  "possessive",
  "imperfect",
  "angle",
  "determined",
  "present",
  "contract",
  "waggish",
  "lazy",
  "produce",
  "mute",
  "spectacular",
  "restrain",
  "time",
  "horn",
  "thought",
  "special",
  "physical",
  "boil",
  "lock",
  "accurate",
  "bridge",
  "confuse",
  "fiction",
  "airplane",
  "placid",
  "team",
  "serious",
  "dependent",
  "crave",
  "girl",
  "burn",
  "blow",
  "separate",
  "person",
  "cower",
  "vomit",
  "run",
  "stretch",
  "handy",
  "efficient",
  "stitch",
  "hoax",
  "blush",
  "net",
  "far",
  "fax",
  "boy",
  "doctor",
  "cellar",
  "knotty",
  "compare",
  "view",
  "sew",
  "madly",
  "chubby",
  "damp",
  "touch",
  "numberless",
  "halting",
  "innocent",
  "glance",
  "insure",
  "cup",
  "crack",
  "mature",
  "instrument",
  "google",
  "engine",
  "damage",
  "burst",
  "rampant",
  "describe",
  "observant",
  "exchange",
  "penitent",
  "intelligent",
  "install",
  "courageous",
  "terrible",
  "agreeable",
  "system",
  "inspire",
  "pretty",
  "book",
  "bell",
  "teach",
  "step",
  "rend",
  "curve",
  "squealing",
  "act",
  "dispensable",
  "ants",
  "gabby",
  "jar",
  "pollute",
  "hair",
  "request",
  "omit",
  "conduct",
  "afterthought",
  "axiomatic",
  "earthquake",
  "convey",
  "fall",
  "irritating",
  "peep",
  "fortunate",
  "capture",
  "sever",
  "burn",
  "egg",
  "dusty",
  "aromatic",
  "stranger",
  "self",
  "compete",
  "busy",
  "sack",
  "vase",
  "conduct",
  "overtake",
  "colour",
  "appliance",
  "shut",
  "base",
  "history",
  "rot",
  "uptight",
  "contest",
  "clever",
  "dwell",
  "quince",
  "lunchroom",
  "carpenter",
  "animate",
  "fallacious",
  "evaporate",
  "mean",
  "present",
  "fertile",
  "painful",
  "window",
  "knotty",
  "complain",
  "willing",
  "spy",
  "bind",
  "stupendous",
  "nourish",
  "thinkable",
  "satisfying",
  "feigned",
  "superb",
  "makeshift",
  "ducks",
  "show",
  "warlike",
  "let",
  "brave",
  "convert",
  "resolute",
  "innovate",
  "irate",
  "limping",
  "omniscient",
  "conclude",
  "thing",
  "mind",
  "snakes",
  "finger",
  "whole",
  "brave",
  "existence",
  "bird",
  "obstruct",
  "snobbish",
  "acquire",
  "certain",
  "rough",
  "pay",
  "star",
  "squirrel",
  "sash",
  "alluring",
  "efficacious",
  "snobbish",
  "fierce",
  "lavish",
  "naughty",
  "crime",
  "insidious",
  "entertaining",
  "threatening",
  "tense",
  "abash",
  "nimble",
  "wiry",
  "disobey",
  "walk",
  "dwell",
  "greedy",
  "drop",
  "give",
  "parcel",
  "secret",
  "expect",
  "inscribe",
  "want",
  "hunt",
  "purring",
  "pastoral",
  "taste",
  "exchange",
  "dry",
  "many",
  "see",
  "sew",
  "laugh",
  "condition",
  "violate",
  "psychedelic",
  "pathetic",
  "fair",
  "cover",
  "cling",
  "greet",
  "pump",
  "boys",
  "sulky",
  "quickest",
  "hanging",
  "mammoth",
  "glance",
  "alarm",
  "engine",
  "grandiose",
  "guarded",
  "prohibit",
  "invite",
  "vigorous",
  "split",
  "agreeable",
  "modify",
  "nasty",
  "trousers",
  "sail",
  "defective",
  "shame",
  "",
  "pest",
  "friendly",
  "tap",
  "stimulating",
  "apply",
  "disuse",
  "education",
  "collect",
  "apply",
  "infamous",
  "chide",
  "grade",
  "fantastic",
  "educat",
  "touch",
  "carve",
  "conserve",
  "join",
  "appear",
  "quilt",
  "silly",
  "rewind",
  "smell",
  "ordinary",
  "historical",
  "wring",
  "frame",
  "lumpy",
  "powerful",
  "leap",
  "crowd",
  "ducks",
  "husky",
  "amazing",
  "invite",
  "thirsty",
  "fretful",
  "undesirable",
  "month",
  "racial",
  "marble",
  "erase",
  "love",
  "nutritious",
  "implant",
  "renounce",
  "shocking",
  "awake",
  "participate",
  "harsh",
  "satirise",
  "carry",
  "bored",
  "fortunate",
  "display",
  "light",
  "wilderness",
  "tacit",
  "distance",
  "enter",
  "inject",
  "comment",
  "rain",
  "type",
  "adamant",
  "steam",
  "taste",
  "mice",
  "grind",
  "sweltering",
  "debonair",
  "song",
  "fight",
  "idealize",
  "boil",
  "consort",
  "note",
  "grubby",
  "awesome",
  "ooze",
  "puzzling",
  "purify",
  "convict",
  "lyrical",
  "resolute",
  "tender",
  "imaginary",
  "catch",
  "chunky",
  "watch",
  "see",
  "climb",
  "behold",
  "spurious",
  "leg",
  "taboo",
  "overwrought",
  "furry",
  "tax",
  "amazing",
  "straight",
  "month",
  "review",
  "door",
  "obscene",
  "outstanding",
  "find",
  "ambitious",
  "distance",
  "next",
  "match",
  "wet",
  "blush",
  "berserk",
  "come",
  "super",
  "nutty",
  "urge",
  "snap",
  "tender",
  "verify",
  "airport",
  "nervous",
  "shed",
  "cave",
  "dwell",
  "dead",
  "boast",
  "territory",
  "fine",
  "love",
  "trade",
  "fragile",
  "station",
  "impose",
  "cough",
  "nappy",
  "shout",
  "colour",
  "change",
  "nifty",
  "vengeful",
  "scientific",
  "heat",
  "inflame",
  "giants",
  "toy",
  "imbibe",
  "women",
  "crack",
  "idea",
  "scale",
  "observation",
  "stereotyped",
  "shelf",
  "obsequious",
  "shock",
  "chin",
  "banish",
  "convey",
  "signify",
  "curve",
  "stingy",
  "jumbled",
  "stew",
  "corn",
  "instrument",
  "sew",
  "propose",
  "smite",
  "ruthless",
  "weep",
  "assert",
  "test",
  "shake",
  "knee",
  "burly",
  "head",
  "slam",
  "misty",
  "cattle",
  "goofy",
  "astonish",
  "cherry",
  "copper",
  "feet",
  "class",
  "prose",
  "perpetual",
  "common",
  "rewind",
  "place",
  "skillful",
  "sort",
  "join",
  "reduce",
  "country",
  "overflow",
  "placid",
  "respect",
  "clammy",
  "jewel",
  "milk",
  "park",
  "self",
  "smash",
  "die",
  "toy",
  "bloody",
  "romantic",
  "implode",
  "add",
  "change",
  "transfer",
  "fairies",
  "vast",
  "week",
  "sloppy",
  "transport",
  "pour",
  "protest",
  "boundary",
  "dispose",
  "degree",
  "inspire",
  "scabble",
  "highfalutin",
  "makeshift",
  "shut",
  "butter",
  "fail",
  "available",
  "behold",
  "bustling",
  "smash",
  "waste",
  "saunter",
  "poised",
  "yarn",
  "cower",
  "stink",
  "weak",
  "humor",
  "sharp",
  "relax",
  "spotty",
  "true",
  "closed",
  "jam",
  "ship",
  "damp",
  "nifty",
  "dock",
  "cast",
  "hydrant",
  "state",
  "thing",
  "gleaming",
  "bite",
  "invention",
  "left",
  "eager",
  "vex",
  "hurt",
  "imagine",
  "gamy",
  "zinc",
  "scam",
  "camera",
  "cracker",
  "bright",
  "teeny",
  "riddle",
  "acid",
  "choose",
  "man",
  "swell",
  "charge",
  "recast",
  "inflame",
  "living",
  "spiky",
  "man",
  "brush",
  "gainsay",
  "blow",
  "migrate",
  "sink",
  "terrify",
  "destroy",
  "normal",
  "steadfast",
  "insurance",
  "loving",
  "changeable",
  "pencil",
  "beautify",
  "compete",
  "pen",
  "roar",
  "marry",
  "glamorous",
  "rampant",
  "tree",
  "powerful",
  "love",
  "print",
  "macho",
  "implant",
  "example",
  "creepy",
  "vast",
  "death",
  "alert",
  "gullible",
  "scab",
  "delay",
  "jelly",
  "shake",
  "open",
  "dock",
  "rule",
  "robust",
  "corrod",
  "farmer",
  "faint",
  "jobless",
  "selection",
  "beg",
  "guide",
  "large",
  "police",
  "future",
  "vulgar",
  "complain",
  "color",
  "damaging",
  "blood",
  "oppress",
  "sulky",
  "lawyer",
  "wren",
  "sleep",
  "grade",
  "nimble",
  "direful",
  "cute",
  "exist",
  "chairs",
  "push",
  "discreet",
  "vex",
  "curtain",
  "counsel",
  "holiday",
  "discover",
  "limit",
  "measly",
  "love",
  "observe",
  "omit",
  "alcoholic",
  "wash",
  "meet",
  "far",
  "pencil",
  "redundant",
  "organic",
  "gamy",
  "tough",
  "warn",
  "linen",
  "beast",
  "fall",
  "expensive",
  "cannon",
  "kill",
  "flower",
  "illegal",
  "town",
  "functional",
  "whispering",
  "right",
  "relax",
  "quick",
  "detect",
  "mellow",
  "sassy",
  "lovely",
  "quince",
  "table",
  "guard",
  "ring",
  "tidy",
  "place",
  "cheap",
  "disgust",
  "quill",
  "unused",
  "decorous",
  "station",
  "purring",
  "store",
  "dapper",
  "separate",
  "trail",
  "push",
  "cause",
  "ready",
  "forbid",
  "relax",
  "legs",
  "rise",
  "save",
  "return",
  "stitch",
  "quartz",
  "brush",
  "female",
  "run",
  "flop",
  "grandmother",
  "healthy",
  "spring",
  "grain",
  "difficult",
  "incise",
  "fight",
  "abject",
  "voracious",
  "dapper",
  "sound",
  "pest",
  "greet",
  "writer",
  "enlighten",
  "store",
  "bet",
  "lyrical",
  "reuse",
  "ignore",
  "melt",
  "week",
  "relate",
  "curvy",
  "silent",
  "heavenly",
  "leather",
  "gabby",
  "endorse",
  "abrasive",
  "read",
  "son",
  "club",
  "coil",
  "bash",
  "godly",
  "ragged",
  "mould",
  "promise",
  "bait",
  "gainsay",
  "book",
  "dash",
  "clumsy",
  "gain",
  "disagreeable",
  "chat",
  "lacking",
  "scab",
  "shaggy",
  "resolve",
  "telling",
  "renew",
  "roar",
  "learning",
  "reduce",
  "piquant",
  "scale",
  "creator",
  "tart",
  "happy",
  "learned",
  "measure",
  "correct",
  "crush",
  "cope",
  "art",
  "country",
  "thump",
  "contrive",
  "elegant",
  "mailbox",
  "symptomatic",
  "scant",
  "letter",
  "lick",
  "conquer",
  "suppose",
  "exclude",
  "female",
  "bustling",
  "show",
  "needy",
  "beautiful",
  "representative",
  "imperil",
  "learning",
  "growth",
  "bashful",
  "kid",
  "carry",
  "retain",
  "set",
  "careless",
  "frantic",
  "touch",
  "wave",
  "dwell",
  "leap",
  "agree",
  "ball",
  "pardon",
  "beggar",
  "frame",
  "soda",
  "scared",
  "swim",
  "statement",
  "contribute",
  "dynamic",
  "fallacious",
  "install",
  "tiresome",
  "beseech",
  "abate",
  "fallacious",
  "bray",
  "cable",
  "cost",
  "foot",
  "chicken",
  "balloon",
  "sidewalk",
  "classify",
  "tough",
  "sheep",
  "bit",
  "tender",
  "beneficial",
  "flippant",
  "attractive",
  "magnificent",
  "pricey",
  "illegal",
  "fierce",
  "stitch",
  "like",
  "suffer",
  "break",
  "feast",
  "hill",
  "mammoth",
  "spotted",
  "wise",
  "stupid",
  "collapse",
  "sail",
  "plucky",
  "impinge",
  "expert",
  "flop",
  "harsh",
  "hammer",
  "concerned",
  "battle",
  "sag",
  "break",
  "honorable",
  "salvage",
  "aspiring",
  "abiding",
  "cautious",
  "breakable",
  "normal",
  "sleep",
  "assorted",
  "float",
  "medical",
  "birds",
  "adjustment",
  "hate",
  "contrive",
  "coast",
  "shiver",
  "invent",
  "exuberant",
  "fixed",
  "friends",
  "visitor",
  "motivate",
  "dolls",
  "tax",
  "subtract",
  "lazy",
  "crime",
  "disobey",
  "resonant",
  "ugliest",
  "daughter",
  "representative",
  "snow",
  "envious",
  "growth",
  "father",
  "racial",
  "persuade",
  "rich",
  "scan",
  "throw",
  "coil",
  "hapless",
  "paint",
  "elderly",
  "compare",
  "teach",
  "fetch",
  "winter",
  "hurried",
  "historical",
  "party",
  "comfortable",
  "saponify",
  "sink",
  "profit",
  "sticky",
  "heavenly",
  "aloof",
  "find",
  "encourage",
  "boorish",
  "impress",
  "force",
  "family",
  "fight",
  "handy",
  "stem",
  "far",
  "desk",
  "discreet",
  "five",
  "robust",
  "thrive",
  "murmur",
  "far",
  "obeisant",
  "venomous",
  "versed",
  "bash",
  "earsplitting",
  "beggar",
  "guarded",
  "disturbed",
  "solicit",
  "forlese",
  "great",
  "friend",
];
const sport_theme = ['tennis', 'football', 'rugby', 'golf', 'hockey', 'badminton', 'boxing', 'cricket', 'karate', 'judo', 'baseball', 'basketball', 'dodgeball', 'cycling', 'kickboxing', 'parkour', 'gliding', 'softball', 'skateboarding', 'snowboarding', 'sumo']
const coding_theme = ['abap', 'actionscript', 'ada', 'delphi', 'go', 'haskell', 'idl', 'rexx', 'scala', 'swift', 'javascript', 'python', 'typescript', 'sql', 'java', 'json', 'php']
const nature_theme = ['tree', 'forest', 'wildlife', 'river', 'island', 'hill', 'animal', 'plant', 'rock', 'waterfall', 'grass', 'flower', 'summer', 'sun', 'bush', 'jungle']
const games_theme = ['minecraft', 'grandtheftauto', 'fallout', 'counterstrike', 'apexlegends', 'rocketleague', 'overwatch', 'roblox', 'callofduty', 'ark', 'amongus', 'apex', 'starwars' ,'hitman', 'halo', 'battlefield', 'forzahorizon', 'farcry', 'cyberpunk', 'fifa', 'valheim']
const phone_theme = ['samsung', 'iphone', 'oppo', 'huawei', 'nokia', 'xiaomi', 'vivo', 'lg', 'lenovo', 'oneplus', 'sony', 'asus']
const color_theme = ['red', 'blue', 'green', 'cyan', 'black', 'white', 'pink', 'purple', 'gray', 'brown', 'darkgreen', 'lightgreen', 'darkblue', 'lightblue', 'darkred', 'lightred', 'magenta', 'gold', 'silver', 'fuchsia']
const camping_theme = ['marshmellow', 'barbeque', 'sticks', 'tent', 'campfire', 'camper', 'caravan', 'flashlight', 'fishing', 'insect', 'park', 'outdoors', 'walking', 'trip']
const music_theme = ['keyboard', 'piano', 'guitar', 'banjo', 'saxophone', 'clarinet', 'horn', 'pipes', 'drums', 'violin', 'flute', 'trumpet', 'harp', 'trumpet', 'voice']

const letterEmojisMap = {
    "🇦": "A", "🇧": "B", "🇨": "C", "🇩": "D", "🇪": "E",
    "🇫": "F", "🇬": "G", "🇭": "H", "🇮": "I", "🇯": "J", "🇰": "K", "🇱": "L",
    "🇲": "M", "🇳": "N", "🇴": "O", "🇵": "P", "🇶": "Q", "🇷": "R", "🇸": "S",
    "🇹": "T", "🇺": "U", "🇻": "V", "🇼": "W", "🇽": "X", "🇾": "Y", "🇿": "Z"
}

class Hangman {
    constructor(options) {
         if (!options.message) throw new TypeError('NO_MESSAGE: Please provide a message arguement')
        if (typeof options.message !== 'object') throw new TypeError('INVALID_MESSAGE: Invalid Discord Message object was provided.')
        if (!options.embed) options.embed = {};
        if (!options.hangman) options.hangman = {};
        
        this.message = options.message;
        this.theme = options.theme || possible_themes[Math.floor(Math.random() * possible_themes.length)]

        this.embedTitle = options.embed.title || 'Hangman Game'
        this.embedColor = options.embed.color || 'RANDOM'
        this.hangManHat = options.hangman.hat || '🎩'
        this.hangManHead = options.hangman.head || '😟'
        this.hangManShirt = options.hangman.shirt || '👕'
        this.hangManPants = options.hangman.pants || '🩳'
        this.hangManBoots = options.hangman.boots || '👞👞'
        this.winMess = options.winMessage || 'You won! The word was... **{{word}}**'
        this.loseMess = options.loseMessage || 'You lose! The word was... **{{word}}**'
    }

    start = async () => {

        const theme = this.theme

        let words;
        if (theme === 'misc') words = misc_theme
        if (theme === 'sport') words = sport_theme
        if (theme === 'coding') words = coding_theme
        if (theme === 'nature') words = nature_theme
        if (theme === 'popular game') words = games_theme
        if (theme === 'phone brand') words = phone_theme
        if (theme === 'color') words = color_theme
        if (theme === 'camping') words = camping_theme
        if (theme === 'music instrument') words = music_theme

        const word = words[Math.floor(Math.random() * words.length)]

        let guessed = [];
        let wrongs = 0;

        const embed = new MessageEmbed()
            .setColor(this.embedColor)
            .setTitle(this.embedTitle)
            .setDescription("```"
                + "|‾‾‾‾‾‾|   \n|     "
                + (wrongs > 0 ? this.hangManHat : " ")
                + "   \n|     "
                + (wrongs > 1 ? this.hangManHead : " ")
                + "   \n|     "
                + (wrongs > 2 ? this.hangManShirt : " ")
                + "   \n|     "
                + (wrongs > 3 ? this.hangManPants : " ")
                + "   \n|    "
                + (wrongs > 4 ? this.hangManBoots : " ")
                + "   \n|     \n|__________\n\n"
                + word.split("").map(l => guessed.includes(l) ? l : "_").join(" ")
                + "```")
            .addField(`Letters Guessed`, '\u200b')
            .addField(`The theme is...`, `\`${theme}\``)
            .addField(`How to play?`, `React to this message with a letter emoji! Example: 🇦, 🇧`)
        const gameMessage = await this.message.channel.send({ embeds: [embed] })

        const filter = (reaction, user) => ["🇦", "🇧", "🇨", "🇩", "🇪", "🇫", "🇬", "🇭", "🇮", "🇯", "🇰", "🇱", "🇲", "🇳", "🇴", "🇵", "🇶", "🇷", "🇸", "🇹", "🇺", "🇻", "🇼", "🇽", "🇾", "🇿"].includes(reaction.emoji.name) && user.id === this.message.author.id

        const gameCollector = gameMessage.createReactionCollector({ filter });

        gameCollector.on("collect", async (reaction, user) => {

            if (user.id != this.message.author.id) {
                reaction.users.remove(user)
                return
            }
            reaction.message.reactions.cache.get(reaction.emoji.name).remove();

            if (!guessed.includes(letterEmojisMap[reaction.emoji.name])) {

                guessed.push(letterEmojisMap[reaction.emoji.name])

                if (word.toUpperCase().indexOf(letterEmojisMap[reaction.emoji.name]) == -1) {
                    wrongs++

                    if (wrongs == 5) {

                        gameCollector.stop()
                        const stopEmbed = new MessageEmbed()
                            .setColor(this.embedColor)
                            .setTitle(this.embedTitle)
                            .setDescription("```"
                                + "|‾‾‾‾‾‾|   \n|     "
                                + (wrongs > 0 ? this.hangManHat : " ")
                                + "   \n|     "
                                + (wrongs > 1 ? this.hangManHead : " ")
                                + "   \n|     "
                                + (wrongs > 2 ? this.hangManShirt : " ")
                                + "   \n|     "
                                + (wrongs > 3 ? this.hangManPants : " ")
                                + "   \n|    "
                                + (wrongs > 4 ? this.hangManBoots : " ")
                                + "   \n|     \n|__________\n\n"
                                + word.toUpperCase().split("").map(l => guessed.includes(l) ? l : "_").join(" ")
                                + "```")
                            .addField(`The theme was`, `\`${theme}\``)
                            .addField(`Game Over`,  this.loseMess
                        .replace('{{word}}', word))
                        return gameMessage.edit({ embeds: [stopEmbed] })
                        
                    }
                } else if (!word.toUpperCase().split("").map(l => guessed.includes(l) ? l : "_").includes("_")) {

                    gameCollector.stop()
                    const winEmbed = new MessageEmbed()
                        .setColor(this.embedColor)
                        .setTitle(this.embedTitle)
                        .setDescription("```"
                            + "|‾‾‾‾‾‾|   \n|     "
                            + (wrongs > 0 ? this.hangManHat : " ")
                            + "   \n|     "
                            + (wrongs > 1 ? this.hangManHead : " ")
                            + "   \n|     "
                            + (wrongs > 2 ? this.hangManShirt : " ")
                            + "   \n|     "
                            + (wrongs > 3 ? this.hangManPants : " ")
                            + "   \n|    "
                            + (wrongs > 4 ? this.hangManBoots : " ")
                            + "   \n|     \n|__________\n\n"
                            + word.toUpperCase().split("").map(l => guessed.includes(l) ? l : "_").join(" ")
                            + "```")
                        .addField(`The theme was`, `\`${theme}\``)
                        .addField(`Game Over`, this.winMess
                        .replace('{{word}}', word))
                    return gameMessage.edit({ embeds: [winEmbed] })   
                    
                }
            }

            const editEmbed = new MessageEmbed()
                .setColor(this.embedColor)
                .setTitle(this.embedTitle)
                .setDescription("```"
                    + "|‾‾‾‾‾‾|   \n|     "
                    + (wrongs > 0 ? this.hangManHat : " ")
                    + "   \n|     "
                    + (wrongs > 1 ? this.hangManHead : " ")
                    + "   \n|     "
                    + (wrongs > 2 ? this.hangManShirt : " ")
                    + "   \n|     "
                    + (wrongs > 3 ? this.hangManPants : " ")
                    + "   \n|    "
                    + (wrongs > 4 ? this.hangManBoots : " ")
                    + "   \n|     \n|__________\n\n"
                    + word.toUpperCase().split("").map(l => guessed.includes(l) ? l : "_").join(" ")
                    + "```")
                .addField(`Letters Guessed`, guessed.length == 0 ? '\u200b' : guessed.join(" "))
                .addField(`The theme is...`, `\`${theme}\``)
            gameMessage.edit({ embeds: [editEmbed] })

            
        }) 
    }  
 } 

module.exports = Hangman;